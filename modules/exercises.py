from telegram import ReplyKeyboardMarkup
import os

# –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ video –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
BASE_DIR = os.path.dirname(os.path.abspath(__file__))  # –ø—É—Ç—å –¥–æ /app (–≥–¥–µ –ª–µ–∂–∏—Ç bot.py –∏ exercises.py)
VIDEO_PATH = os.path.join(BASE_DIR, "video")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
exercise_menu = ReplyKeyboardMarkup(
    [["–î—ã—Ö–∞–Ω–∏–µ", "–ú–µ–¥–∏—Ç–∞—Ü–∏—è"],
     ["–†–µ–ª–∞–∫—Å–∞—Ü–∏—è", "üé• –í–∏–¥–µ–æ"],
     ["–ù–∞–∑–∞–¥"]],
    resize_keyboard=True
)

# –ú–µ–Ω—é –≤–∏–¥–µ–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
video_menu = ReplyKeyboardMarkup(
    [["üé• –í–∏–¥–µ–æ –¥—ã—Ö–∞–Ω–∏–µ", "üé• –í–∏–¥–µ–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è"],
     ["üé• –í–∏–¥–µ–æ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è", "üé• –í–∏–¥–µ–æ —Å–æ–Ω"],
     ["–ù–∞–∑–∞–¥"]],
    resize_keyboard=True
)

async def handle(update, context, main_menu):
    text = update.message.text or ""
    section = context.user_data.get("section", "menu")

    # –í—Ö–æ–¥ –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    if text == "üßò –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è":
        context.user_data["section"] = "exercises"
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:", reply_markup=exercise_menu)

    # ===== –¢–µ–∫—Å—Ç–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è =====
    elif section == "exercises":
        if text == "–î—ã—Ö–∞–Ω–∏–µ":
            await update.message.reply_text(
                "ü´Å –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ¬´4‚Äì7‚Äì8¬ª:\n\n"
                "1) –í–¥–æ—Ö ‚Äî 4 —Å–µ–∫.\n2) –ó–∞–¥–µ—Ä–∂–∫–∞ ‚Äî 7 —Å–µ–∫.\n3) –í—ã–¥–æ—Ö ‚Äî 8 —Å–µ–∫.\n–ü–æ–≤—Ç–æ—Ä–∏ 3‚Äì4 —Ä–∞–∑–∞."
            )

        elif text == "–ú–µ–¥–∏—Ç–∞—Ü–∏—è":
            await update.message.reply_text(
                "üßò –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ¬´–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å¬ª:\n\n"
                "–°—è–¥—å —É–¥–æ–±–Ω–æ, –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ –Ω–∞–±–ª—é–¥–∞–π –¥—ã—Ö–∞–Ω–∏–µ.\n"
                "–ï—Å–ª–∏ –º—ã—Å–ª–∏ —É—Ö–æ–¥—è—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –≤–¥–æ—Ö—É –∏ –≤—ã–¥–æ—Ö—É."
            )

        elif text == "–†–µ–ª–∞–∫—Å–∞—Ü–∏—è":
            await update.message.reply_text(
                "üåô ¬´–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ¬ª:\n\n"
                "1) –ù–∞–ø—Ä—è–≥–∞–π –º—ã—à—Ü—ã —Ä—É–∫ –Ω–∞ 5 —Å–µ–∫ ‚Üí –æ—Ç–ø—É—Å–∫–∞–π.\n"
                "2) –ü–æ–≤—Ç–æ—Ä–∏ —Å –Ω–æ–≥–∞–º–∏ –∏ –ø–ª–µ—á–∞–º–∏.\n"
                "–°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å."
            )

        elif text == "üé• –í–∏–¥–µ–æ":
            context.user_data["section"] = "video_exercises"
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –≤–∏–¥–µ–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:", reply_markup=video_menu)

        elif text == "–ù–∞–∑–∞–¥":
            context.user_data["section"] = "menu"
            await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu)

    # ===== –í–∏–¥–µ–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è =====
    elif section == "video_exercises":
        if text == "üé• –í–∏–¥–µ–æ –¥—ã—Ö–∞–Ω–∏–µ":
            file_path = os.path.join(VIDEO_PATH, "breathing.mp4")
            await update.message.reply_text("–í–æ—Ç –≤–∏–¥–µ–æ –ø–æ –¥—ã—Ö–∞–Ω–∏—é üëá")
            await update.message.reply_video(video=open(file_path, "rb"))

        elif text == "üé• –í–∏–¥–µ–æ –º–µ–¥–∏—Ç–∞—Ü–∏—è":
            file_path = os.path.join(VIDEO_PATH, "meditation.mp4")
            await update.message.reply_text("–í–æ—Ç –≤–∏–¥–µ–æ –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ üëá")
            await update.message.reply_video(video=open(file_path, "rb"))

        elif text == "üé• –í–∏–¥–µ–æ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è":
            file_path = os.path.join(VIDEO_PATH, "relaxation.mp4")
            await update.message.reply_text("–í–æ—Ç –≤–∏–¥–µ–æ –ø–æ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ üëá")
            await update.message.reply_video(video=open(file_path, "rb"))

        elif text == "üé• –í–∏–¥–µ–æ —Å–æ–Ω":
            file_path = os.path.join(VIDEO_PATH, "sleep.mp4")
            await update.message.reply_text("–í–æ—Ç –≤–∏–¥–µ–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞—Å—ã–ø–∞–Ω–∏—è üëá")
            await update.message.reply_video(video=open(file_path, "rb"))

        elif text == "–ù–∞–∑–∞–¥":
            context.user_data["section"] = "exercises"
            await update.message.reply_text("–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:", reply_markup=exercise_menu)
